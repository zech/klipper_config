######################################################################
#                           TEMPERATURE                              #
######################################################################

[gcode_macro HEATSOAK]
gcode:
	# Parameters
	{% set t = params.T|default(115)|int %}
	{% set move = params.MOVE|default(0)|int %}

	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0 ; cancel off timer (if there is one)
	;SET_FAN_SPEED FAN=Exhaust SPEED=0		 		; turn off exhaust fan
	M140 S{t}										; heat bed
	{% if t >= 100 %}
		M104 S180									; set hotend to no-ooze temp
		M106 S205 									; turn on part fan (80%)
	{% else %}
		M106 S0 									; turn part fan off
	{% endif %}
	{% if move == 1 %}
		CG28										; conditional home
		PARK_BED						 			; move to bed
	{% endif %}


######################################################################
#                           START/END                                #
######################################################################

[gcode_macro PRINT_START]
gcode:
	{% set input_bed = params.BED|int %}
	{% set input_hotend = params.HOTEND|int %}
	{% set input_chamber = params.CHAMBER|default(0)|int %}

    {% if not printer["temperature_sensor chamber"].temperature >= input_chamber %}
      { action_respond_info("Chamber not at temp yet, waiting...") }
      HEATSOAK T={input_bed} MOVE=1
	  M190 S{input_bed}
	  M191 S{input_chamber}
    {% else %}
      { action_respond_info("Chamber at or above temp.") }
      {% if printer.heater_bed.temperature < (input_bed - 2) %}
        HEATSOAK T={input_bed} MOVE=1
        M190 S{input_bed}
      {% else %}
        HEATSOAK T={input_bed} MOVE=0
	  {% endif %}
    {% endif %}

    # disable part fan and start bed heating
    M106 S0
    M140 S{input_bed}
    M104 S140

    # align and calibrate
    BED_MESH_CLEAR
    CG28
    QUAD_GANTRY_LEVEL
    G28 Z                                 ; home z after qgl to not crash into brush
    G90
    BED_MESH_CALIBRATE PROFILE=LIVE_MESH
    BED_MESH_PROFILE LOAD=LIVE_MESH
    CLEAN_NOZZLE TEMP={input_hotend}
    CALIBRATE_Z
    CLEAN_NOZZLE TEMP={input_hotend} PURGE=1 WIPES=2
    G92 E0

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    # PARK_REAR                      ; park nozzle at rear
    BED_MESH_CLEAR

######################################################################
#                       CANCEL/PAUSE/RESUME                          #
######################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
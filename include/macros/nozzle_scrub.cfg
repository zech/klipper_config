[gcode_macro CLEAN_NOZZLE]

# These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
# oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
# ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            15            ; Amount of filament, in mm, to purge.
variable_purge_spd:           150            ; Speed, in mm/min, of the purge.
variable_purge_ret:             4            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:           10            ; Dwell/wait time, in seconds, after purging and retracting.

# Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:             1

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_clearance_z:           5            ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3            ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd_xy:        7000            ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500            ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000            ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of
# parameters remain the same whether bucket is at rear or front.
#
#                  ←   brush_width   →
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
#
#
variable_brush_start:         75
variable_brush_width:         52
variable_brush_front:          0
variable_brush_depth:          0


# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore
# this section. A visual reference is provided below. Note that orientation of parameters remain the same whether bucket is at rear
# or front.
#
#                                     bucket_gap
#                                      ← ---- →
#                     __________________________________________
#                    |                 |      |                 |
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ← ------------- →        ← ------------- →
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
#
variable_bucket_left_width:  92
variable_bucket_right_width: 40            
variable_bucket_gap:         22
variable_bucket_start:        0
variable_bucket_pos:          1

gcode:
  ## Save the gcode state in this macro instance.
  SAVE_GCODE_STATE NAME=clean_nozzle
  CG28
  G90

  {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set input_purge = params.PURGE|default(0)|int %}
  {% set input_nozzle_temp = params.TEMP|default(0)|int + 2 %}
  {% set input_wipe_qty = params.WIPES|default(wipe_qty)|int %}

  {% if input_nozzle_temp > 0 %}
     M104 S{input_nozzle_temp}
  {% endif %}

  {% if input_purge == 1 %}
     ### Randomly select left or right bin for purge. 0 = left, 1 = right
     SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE VARIABLE=bucket_pos VALUE={(range(2) | random)}

     ### Raise Z for travel.
     G0 Y{Ry} Z{brush_top + clearance_z} F{prep_spd_z}

     ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
     G0 X{bucket_start + (bucket_left_width / (2 - bucket_pos)) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))} F{prep_spd_xy}

     {% if input_nozzle_temp > 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={input_nozzle_temp - 2}
        M83      ; relative mode
        G1 E{purge_len}  F{purge_spd}
        G1 E-{purge_ret} F{purge_spd * 5}
        G4 P{ooze_dwell * 1000}
        G92 E0   ; reset extruder
     {% endif %}
  {% endif %}

  ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
  G0 Z{brush_top + clearance_z} F{prep_spd_z}
  G0 X{brush_start + (brush_width * bucket_pos)} Y{Ry} F{prep_spd_xy}

  ## Move nozzle down into brush.
  G0 Z{brush_top} F{prep_spd_z}

  ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
  {% for wipes in range(1, (input_wipe_qty + 1)) %}
     G0 X{brush_start + (brush_width * (1 - bucket_pos))} F{wipe_spd_xy}
     G0 X{brush_start + (brush_width * bucket_pos)} F{wipe_spd_xy}
  {% endfor %}

  ## Clear from area.
  M117 Cleaned!
  G0 X{bucket_start + bucket_left_width + bucket_gap + (bucket_right_width / 2)} Z{brush_top + clearance_z} F{prep_spd_xy}

  ## Restore the gcode state to how it was before the macro.
  RESTORE_GCODE_STATE NAME=clean_nozzle
